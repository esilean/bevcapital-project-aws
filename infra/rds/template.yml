AWSTemplateFormatVersion: 2010-09-09
Description: This template creates a RDS

Parameters:
  Engine:
    Description: The name of the database engine to be used for this instance.
    Type: String
    Default: mysql
    AllowedValues: [mysql, mariadb, postgres]
    ConstraintDescription: "Please specify either a mysql, mariadb, or postgres engine for the RDS instance."

  DBName:
    Default: BevCapital
    Description: The database name
    Type: String
    MinLength: "1"
    MaxLength: "64"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  DBUser:
    NoEcho: "true"
    Description: The database admin account username
    Type: String
    MinLength: "1"
    MaxLength: "16"
    Default: admin
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  DBPort:
    Default: "3306"
    Description: The port of the database
    Type: Number
    MinValue: "3000"
    MaxValue: "5000"
    ConstraintDescription: size must be 4.

  SecretName:
    Description: Name of the secret
    Type: String
    Default: RDSSecretBevCapital

  DBAllocatedStorage:
    Default: "5"
    Description: The size of the database (Gb)
    Type: Number
    MinValue: "5"
    MaxValue: "1024"
    ConstraintDescription: must be between 5 and 1024Gb.

  AllowMajorVersionUpgrade:
    Description: If you update the EngineVersion property to a version that's different from the DB instance's current major version, set this property to true.
    Type: String
    AllowedValues: [true, false]
    Default: false
    ConstraintDescription: "Value must be boolean value."

  AutoMinorVersionUpgrade:
    Description: Indicates that minor engine upgrades are applied automatically to the DB instance during the maintenance window. The default value is true.
    Type: String
    AllowedValues: [true, false]
    Default: true
    ConstraintDescription: "Value must be boolean value."

  DBInstanceClass:
    Description: The database instance type
    Type: String
    Default: db.t2.micro
    AllowedValues:
      [
        db.t1.micro,
        db.m1.small,
        db.m1.medium,
        db.m1.large,
        db.m1.xlarge,
        db.m2.xlarge,
        db.m2.2xlarge,
        db.m2.4xlarge,
        db.m3.medium,
        db.m3.large,
        db.m3.xlarge,
        db.m3.2xlarge,
        db.m4.large,
        db.m4.xlarge,
        db.m4.2xlarge,
        db.m4.4xlarge,
        db.m4.10xlarge,
        db.r3.large,
        db.r3.xlarge,
        db.r3.2xlarge,
        db.r3.4xlarge,
        db.r3.8xlarge,
        db.m2.xlarge,
        db.m2.2xlarge,
        db.m2.4xlarge,
        db.cr1.8xlarge,
        db.t2.micro,
        db.t2.small,
        db.t2.medium,
        db.t2.large,
      ]
    ConstraintDescription: must select a valid database instance type.

  BackupRetentionPeriod:
    Type: String
    AllowedPattern: "^([0-9]{1}|[1-2]{1}[0-9]{1}|3[0-5]{1})$"
    Description: The number of days during which automatic DB snapshots are retained.
    ConstraintDescription: "Value must be a valid number between 0-35."

  VPCSecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: Specifies if the database instance is a multiple Availability Zone deployment.
    ConstraintDescription: "Please provide valid ids for the security group(s)."

  DBSubnetGroupName:
    Type: String
    Default: default-vpc-a4fc13c2
    Description: A DB subnet group to associate with the DB instance.

  MultiAZ:
    Type: String
    Default: "false"
    AllowedValues: ["true", "false"]
    Description: Multi-AZ master database
    ConstraintDescription: must be true or false.

  PubliclyAccessible:
    Type: String
    Default: "false"
    AllowedValues: ["true", "false"]
    Description: DB has public access
    ConstraintDescription: must be true or false.

Resources:
  RDSSecretKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Sid: "Enable IAM User Permissions"
            Effect: "Allow"
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: "kms:*"
            Resource: "*"

  RDSSecretKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/RDSSecretKey
      TargetKeyId: !Ref RDSSecretKey

  RDSSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Ref SecretName
      KmsKeyId: !Ref RDSSecretKey
      GenerateSecretString:
        SecretStringTemplate: !Join ["", ['{"username": "', !Ref DBUser, '"}']]
        GenerateStringKey: "password"
        PasswordLength: 25
        ExcludeCharacters: '"@/\'

  RDSInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: !Ref DBAllocatedStorage
      AllowMajorVersionUpgrade: !Ref AllowMajorVersionUpgrade
      AutoMinorVersionUpgrade: !Ref AutoMinorVersionUpgrade
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      CopyTagsToSnapshot: true
      DBInstanceClass: !Ref DBInstanceClass
      Port: !Ref DBPort
      EngineVersion: "8.0.20"
      DBName: !Ref DBName
      Engine: !Ref Engine
      DBSubnetGroupName: !Ref DBSubnetGroupName
      VPCSecurityGroups: !Ref VPCSecurityGroups
      MasterUsername: !Ref DBUser
      MasterUserPassword:
        !Join [
          "",
          [
            "{{resolve:secretsmanager:",
            !Ref RDSSecret,
            ":SecretString:password}}",
          ],
        ]
      MonitoringInterval: 0 #Not using enhanced monitoring. Regular RDS monitoring is still enabled.
      MultiAZ: !Ref MultiAZ
      PubliclyAccessible: !Ref PubliclyAccessible
      StorageType: gp2
      Tags:
        - Key: Name
          Value: !Sub
            - ${AWS::StackName}-${Name}
            - { Name: !Ref DBName }

Outputs:
  DBInstanceIdentifier:
    Description: The database instance identifier
    Value: !Ref RDSInstance
    Export:
      Name: DBInstanceIdentifier

  DBEndpoint:
    Description: The connection endpoint for the database.
    Value: !GetAtt RDSInstance.Endpoint.Address
    Export:
      Name: DBInstance-Endpoint

  DBPort:
    Description: The port number on which the database accepts connections.
    Value: !GetAtt RDSInstance.Endpoint.Port
    Export:
      Name: !Sub
        - "${AWS::StackName}-${engine}-${Name}-port"
        - { Name: !Ref DBName, engine: !Ref Engine }
