Description: >
  This template deploys an Network Load Balancer
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: development

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the Application Load Balancer should be deployed to

  Subnets:
    Description: Choose which subnets the Application Load Balancer should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

  NLBScheme:
    Type: String
    Description: Choose network load balancer scheme
    Default: internal
    AllowedValues: ["internet-facing", "internal"]

  LoadBalancerCertificateArn:
    Description: "Optional Amazon Resource Name (ARN) of the certificate to associate with the load balancer."
    Type: String
    Default: ""

Conditions:
  HasLoadBalancerCertificateArn:
    !Not [!Equals [!Ref LoadBalancerCertificateArn, ""]]

Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${EnvironmentName}-nlb
      Type: network
      Scheme: !Ref NLBScheme
      Subnets: !Ref Subnets
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  # We define a default target group here, as this is a mandatory Parameters
  # when creating an Application Load Balancer Listener. This is not used, instead
  # a target group is created per-service in each service template (../services/*)
  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${EnvironmentName}-default-nlb
      VpcId: !Ref VPC
      Port: 80
      Protocol: TCP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60

  # NLBListener:
  #   Type: AWS::ElasticLoadBalancingV2::Listener
  #   Condition: HasLoadBalancerCertificateArn
  #   DependsOn:
  #     - LoadBalancer
  #   Properties:
  #     LoadBalancerArn: !Ref LoadBalancer
  #     Port: 80
  #     Protocol: TCP
  #     DefaultActions:
  #       - Type: forward
  #         TargetGroupArn: !Ref DefaultTargetGroup

  # NLBListenerCert:
  #   Type: AWS::ElasticLoadBalancingV2::ListenerCertificate
  #   Properties:
  #     Certificates:
  #       - CertificateArn: !Ref LoadBalancerCertificateArn
  #     ListenerArn: !Ref NLBListener

Outputs:
  LoadBalancer:
    Description: A reference to the Network Load Balancer
    Value: !Ref LoadBalancer

  # NLBListener:
  #   Condition: HasLoadBalancerCertificateArn
  #   Description: NLB HTTPS listener for services
  #   Value: !Ref NLBListener

  NLBUrl:
    Description: The URL of the Network Load Balancer
    Value: !GetAtt LoadBalancer.DNSName
