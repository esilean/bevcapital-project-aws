Description: >
  This template deploys an Network Load Balancer
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: development

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the Application Load Balancer should be deployed to

  Subnets:
    Description: Choose which subnets the Application Load Balancer should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

  Scheme:
    Type: String
    Description: Choose network load balancer scheme
    Default: internal
    AllowedValues: ["internet-facing", "internal"]

Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${EnvironmentName}-nlb
      Type: network
      Scheme: !Ref Scheme
      LoadBalancerAttributes:
        - Key: load_balancing.cross_zone.enabled
          Value: true
      Subnets: !Ref Subnets
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  # We define a default target group here, as this is a mandatory Parameters
  # when creating an Application Load Balancer Listener. This is not used, instead
  # a target group is created per-service in each service template (../services/*)
  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${EnvironmentName}-default-nlb
      VpcId: !Ref VPC
      Port: 80
      Protocol: TCP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 15

Outputs:
  LoadBalancer:
    Description: A reference to the Network Load Balancer
    Value: !Ref LoadBalancer
    Export:
      Name: ARNLoadBalancerBevCapital

  LoadBalancerUrl:
    Description: The URL of the Network Load Balancer
    Value: !GetAtt LoadBalancer.DNSName
